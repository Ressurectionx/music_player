import 'package:assets_audio_player/assets_audio_player.dart';import 'package:flutter/material.dart';import 'package:on_audio_query/on_audio_query.dart';class Player extends StatefulWidget {  Player(this.songModel);  SongModel songModel;  @override  _PlayerState createState() => _PlayerState();}class _PlayerState extends State<Player> {  @override  void initState(){    super.initState();    seek();  }List<Color> colors=[  const Color(0xff08061d),  const Color(0xffFF0099),  const Color(0xff12c2e9),  const Color(0xffc471ed),  const Color(0xfff64f59),  const Color(0xff08061d),];  bool _play = true;  var slide_duration=0;  final assetsAudioPlayer = AssetsAudioPlayer();  seek(){    double value=slide_duration.roundToDouble();    assetsAudioPlayer.currentPosition.value;  }  play(String data){    assetsAudioPlayer.open(      Audio.file(data ),    );  }  void stop(){      assetsAudioPlayer.stop(      );  }  @override  Widget build(BuildContext context) {    SongModel model=widget.songModel;    String duration1= (model.duration!*0.00001).toStringAsFixed(2);    double duration= double.parse(duration1);    return Scaffold(      backgroundColor: const Color(0xff302b63),      appBar: AppBar(        leading: IconButton(icon: const Icon(Icons.arrow_back_ios,size: 24,color: Colors.grey,), onPressed: () { Navigator.pop(context);  },),        //backgroundColor: const Color(0xff4e03a7),        backgroundColor: Colors.transparent,        elevation: 0.0,      ),      body:  SafeArea(child: Stack(      alignment: Alignment.center,      children: [      Container(      decoration: const BoxDecoration(      gradient: LinearGradient(          begin: Alignment.topCenter,          end: Alignment.bottomCenter,          colors: [            Color(0xff302b63),            Color(0xff08061d),          ])    ),    ),    Column(      mainAxisAlignment: MainAxisAlignment.start,      crossAxisAlignment: CrossAxisAlignment.center,      children: [         const SizedBox(height: 5,),         Container(          height:  MediaQuery.of(context).size.width*0.65,          clipBehavior: Clip.none,          width: MediaQuery.of(context).size.width*0.65,          decoration: BoxDecoration(            borderRadius: BorderRadius.circular(55),            border: Border.all(color: Colors.white,width: 2),          ),         child: QueryArtworkWidget(           id: widget.songModel.id,           type: ArtworkType.AUDIO,           artworkFit: BoxFit.fitHeight,           quality: 100,           keepOldArtwork: true,         ),),         const SizedBox(height: 20,),          Padding(           padding: const EdgeInsets.only(left: 15.0,right: 15),           child: Text(             model.title,             style: const TextStyle(fontSize: 16,color: Colors.white,letterSpacing: 1.3,decorationStyle: TextDecorationStyle.wavy),             softWrap: true,             textAlign: TextAlign.center,           ),         ),          const SizedBox(height: 10,),          Padding(          padding: const EdgeInsets.only(left: 15.0,right: 15),          child: Text(            model.album!,            style: const TextStyle(fontSize: 16,color: Colors.white,letterSpacing: 1.3,decorationStyle: TextDecorationStyle.wavy),            softWrap: true,            textAlign: TextAlign.center,          ),        ),          const SizedBox(height: 35,),             Container(              height: 5,                margin: const EdgeInsets.only(left: 30,right: 30),                clipBehavior: Clip.none,                decoration:   BoxDecoration(                  gradient: LinearGradient(colors: colors),                ),                child: Slider(              activeColor: Colors.transparent,              inactiveColor: Colors.black.withOpacity(0.6),              thumbColor: Colors.white,              autofocus: true,              value: slide_duration.toDouble(),              min: 0,              max: 100,              onChanged: (double value){                setState(() {                  slide_duration=value.toInt();                  seek();                });              },)),        const SizedBox(height: 15,),          Text((duration*slide_duration/100).toStringAsFixed(2),          style: const TextStyle(fontSize: 18,fontWeight:FontWeight.w600,color: Colors.blue,letterSpacing: 1.5),) ,          const SizedBox(height: 35,),            Row(                mainAxisAlignment: MainAxisAlignment.center,            crossAxisAlignment: CrossAxisAlignment.center,            children:  [              IconButton(icon:const Icon(Icons.loop_rounded,size:35,color: Colors.grey,),onPressed: (){              },),              const SizedBox(width:40,),            IconButton(icon:const Icon(Icons.skip_previous_sharp,size:35,color: Colors.white,),onPressed: (){                assetsAudioPlayer.previous(keepLoopMode: true);            },),                     Container(                decoration:  BoxDecoration(                     shape: BoxShape.circle,                    border:Border.all(width: 2,color: Colors.black),                    gradient: LinearGradient(                        begin: Alignment.topRight,                        end: Alignment.bottomLeft,                        colors: colors)                ),                child: AudioWidget.assets(            play: _play,            initialPosition: Duration(minutes: slide_duration.toInt()),            child: RaisedButton(            color: Colors.transparent,            elevation: 0,            child: Icon(_play ? Icons.play_arrow : Icons.pause),            onPressed: () {              if(_play==true){                play(widget.songModel.data);              }              else{                stop();              }              setState(() {                 _play = !_play;               });            },            ),            path: widget.songModel.data)),             IconButton(icon:const Icon(Icons.skip_next,size:35,color: Colors.white,),               onPressed: (){              assetsAudioPlayer.next(keepLoopMode: true);            },),              const SizedBox(width:40,),              IconButton(                icon:const Icon(Icons.arrow_circle_down,size:35,color: Colors.grey,),                onPressed: (){            },),            ],            )      ],)      ])),    );  }}