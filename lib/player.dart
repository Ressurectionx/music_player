import 'package:assets_audio_player/assets_audio_player.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:music/widgets/container.dart';import 'package:music/widgets/thumbnail.dart';import 'package:on_audio_query/on_audio_query.dart';import 'constants/constants.dart';class Player extends StatefulWidget {  Player(this.songModel);  SongModel songModel;  @override  _PlayerState createState() => _PlayerState();}class _PlayerState extends State<Player> {  @override  void initState(){    super.initState();    seek();  }  final assetsAudioPlayer = AssetsAudioPlayer();  seek(){     setState(() {       assetsAudioPlayer.seek(Duration(minutes: slide_duration.toInt()));     });  }  Play(String data){    assetsAudioPlayer.open(      Audio.file(data ),    );     }  void stop(){      assetsAudioPlayer.stop(      );  }  @override  Widget build(BuildContext context) {    SongModel model=widget.songModel;    String duration1= (model.duration!*0.00001).toStringAsFixed(2);    double duration= double.parse(duration1);    double width= MediaQuery.of(context).size.width;    double height= MediaQuery.of(context).size.height;    return Scaffold(      backgroundColor: MYColor1,      appBar: AppBar(        leading: Padding(          padding: const EdgeInsets.only(left: 10.0),          child: IconButton(icon: const Icon(Icons.arrow_back_ios,size: 24,color: Colors.grey,),                    onPressed: () { Navigator.pop(context);  },),        ),        backgroundColor: Colors.transparent,        elevation: 0.0,        title:Text(          model.album!,          style:  const TextStyle(fontSize: 30,color: Colors.grey,              letterSpacing: 1.5,fontWeight: FontWeight.w900,              decorationStyle: TextDecorationStyle.wavy),          softWrap: true,          textAlign: TextAlign.center, ),        centerTitle: true,        actions: const [          Padding(          padding: EdgeInsets.only(right: 18.0),          child: Icon(CupertinoIcons.list_bullet_indent,color: Colors.grey,),        )],      ),      body:  SafeArea(child: Stack(      alignment: Alignment.center,      children: [      ColorContainer(const Color(0xff302b63),const Color(0xff302b63),const Color(0xff08061d),const Color(0xff08061d)),    Column(      mainAxisAlignment: MainAxisAlignment.start,      crossAxisAlignment: CrossAxisAlignment.center,      children: [             const SizedBox(height: 75,),        ThumbNail(widget.songModel.id,width*0.7,10,6),        const SizedBox(height: 65,),        Text(          model.title,          style: const TextStyle(fontSize: 24,color: Colors.white,letterSpacing: 1.7,decorationStyle: TextDecorationStyle.wavy),          softWrap: true,          textAlign: TextAlign.center,        ),        const SizedBox(height: 10,),         Text(          model.artist!,          style: TextStyle(fontSize: 20,color: Colors.white.withOpacity(0.75),              letterSpacing: 1.3,decorationStyle: TextDecorationStyle.wavy),          softWrap: true,          textAlign: TextAlign.center,        ),        const SizedBox(height: 35,),        Container(              height: 8,                margin: const EdgeInsets.only(left: 30,right: 30),                clipBehavior: Clip.none,                decoration:   BoxDecoration(                  gradient: LinearGradient(colors: colors),),                child: Slider(              activeColor: Colors.transparent,              inactiveColor: Colors.black.withOpacity(0.8),              thumbColor: Colors.white,              autofocus: true,              value: slide_duration,              min: 0,              max: 100,              onChanged: (double value){                setState(() {                  slide_duration=value;                  seek();                });              },)),        const SizedBox(height: 15,),        Text((duration*slide_duration/100).toStringAsFixed(2),        style: TextStyle(fontSize: 18,fontWeight:FontWeight.w600,color:sky_blue,letterSpacing: 1.5),),        const SizedBox(height: 35,),        Column(children: [            Row(              mainAxisAlignment: MainAxisAlignment.center,              crossAxisAlignment: CrossAxisAlignment.center,              children:  [                IconButton(icon:const Icon(Icons.skip_previous_sharp,size:35,color: Colors.white,),onPressed: (){                  assetsAudioPlayer.previous(keepLoopMode: true);                },),                Container(                    decoration:  BoxDecoration(                        shape: BoxShape.circle,                        border:Border.all(width: 2,color: Colors.black),                        gradient: LinearGradient(                            begin: Alignment.topRight,                            end: Alignment.bottomLeft,                            colors: colors)                    ),                    child: AudioWidget.assets(                        play: play,                        initialPosition: Duration(minutes: slide_duration.toInt()),                        child: RaisedButton(                          color: Colors.transparent,                          elevation: 0,                          child: Icon(play ? Icons.play_arrow : Icons.pause),                          onPressed: () {                            if(play==true){                              Play(widget.songModel.data);                            }                            else{                              stop();                            }                            setState(() {                              play = !play;                            });                          },                        ),                        path: widget.songModel.data)),                IconButton(icon:const Icon(Icons.skip_next,size:35,color: Colors.white,),                  onPressed: (){                    assetsAudioPlayer.next(keepLoopMode: true);                  },),              ],            ),            Row(              mainAxisAlignment: MainAxisAlignment.spaceEvenly,              crossAxisAlignment: CrossAxisAlignment.center,              children:  [                IconButton(icon: Icon(Icons.loop_rounded,size:30,color: Colors.grey,),onPressed: (){                },),                const SizedBox(width:250,),                IconButton(                  icon: Icon(Icons.arrow_circle_down,size:30,color: Colors.grey,),                  onPressed: (){                  },),                       ],            )          ],)      ],)      ])),    );  }}