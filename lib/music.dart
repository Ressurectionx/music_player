import 'package:flutter/material.dart';import 'package:music/player.dart';import 'package:on_audio_query/on_audio_query.dart';import 'package:permission_handler/permission_handler.dart';class Music extends StatefulWidget {  const Music({Key? key}) : super(key: key);  @override  State<Music> createState() => _MusicState();}class _MusicState extends State<Music> {  final _audioQuery =OnAudioQuery();  @override void initState(){    super.initState();    requestPermission();  }  Widget build(BuildContext context) {    return Scaffold(      extendBodyBehindAppBar: true,    //  extendBody: true,      appBar: AppBar(        backgroundColor: Colors.transparent,        centerTitle: true,        title:  Text("My Music",          style: TextStyle(color: Colors.white.withOpacity(0.8),fontSize: 28,              letterSpacing: 1.2,fontWeight: FontWeight.w900),),              elevation: 0.0,      ),      body: Stack(children: [        Container(             decoration: const BoxDecoration(               gradient: LinearGradient(                   begin: Alignment.topCenter,                   end: Alignment.bottomRight,                   stops: [0.6,1],                   colors: [                       Color(0xff4e03a7),                       Color(0xff0a35ad)               ])             ),        ) ,        Center(          child: FutureBuilder<List<SongModel>>(            future: _audioQuery.querySongs(              sortType: SongSortType.DURATION,              orderType: OrderType.DESC_OR_GREATER,              uriType: UriType.EXTERNAL,              ignoreCase: true,            ),            builder: (context,Data){              if(Data.data==null){                return const Center(child: CircularProgressIndicator(),);              }              if(Data.data?.isEmpty==null){                return const Center(child: Text("No Song Found"),);              }              else{                return ListView.builder(                    itemCount: Data.data!.length,                    itemBuilder: (context,index){                      return Padding(                        padding: const EdgeInsets.only(top: 8.0),                        child: ListTile(                          onTap: (){                            Navigator.push(context,                                MaterialPageRoute(builder: (context)=>Player(Data.data![index]))); },                          title: Text(Data.data![index].displayName,style: const TextStyle(color: Colors.white,fontSize: 14),),                          subtitle:  Text(Data.data![index].album.toString(),style: TextStyle(color: Colors.white.withOpacity(0.8),fontSize: 12),),                          trailing: Column(children: [                            Image.asset("assets/images/play.png",height: 25,width: 25,),                            Text(  Data.data![index].duration!.toStringAsFixed(0)),                          ],),                          leading: Container(child: Padding(                            padding: const EdgeInsets.only(bottom: 8.0),                            child: QueryArtworkWidget(                              size: 10,                              id: Data.data![index].id,                              type: ArtworkType.ARTIST,                              artworkFit: BoxFit.cover,                              quality: 80,                              keepOldArtwork: true,                            ),                          )),                        ),                      );                    });              }            },          ),        )      ],)    );  }  void requestPermission() async{    var status = await Permission.storage.status;    if (status.isDenied) {      Permission.storage.request();    }    if (await Permission.location.isRestricted) {      Permission.storage.request();    }  }}